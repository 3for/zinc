//! { "cases": [ {
//!     "case": "default",
//!     "method": "default",
//!     "input": {
//!         "value": "42"
//!     },
//!     "output": {
//!         "result": "1024",
//!         "root_hash": "0xac4f4d5e978947dcd76afd6b83005aa15a71abf186a0f31c77ae28d6e4e039"
//!     }
//! } ] }

contract Test {
    a: u248;
    b: u248;

    pub fn default(mut self, value: u248) -> u248 {
        self.a = 5 as u248;
        self.b = 11 as u248;

        self.a + self.quadruple(self.triple(self.double(value))) + self.b
    }

    fn double(self, value: u248) -> u248 {
        value * 2
    }

    fn triple(self, value: u248) -> u248 {
        3 * value
    }

    fn quadruple(self, value: u248) -> u248 {
        value * 4
    }
}
