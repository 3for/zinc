//!
//! The '+' operator tests.
//!

struct ResultU8 {
    add_zero_zero: u8,
    add_zero_value: u8,
    add_value_zero: u8,
    add_value_value: u8,
    add_max: u8,
}

impl ResultU8 {
    fn test() -> Self {
        Self {
            add_zero_zero: 0 + 0,
            add_zero_value: 0 + 5,
            add_value_zero: 5 + 0,
            add_value_value: 5 + 3,
            add_max: 115 + 140,
        }
    }
}

struct ResultI8 {
    add_zero_zero: i8,
    add_zero_value: i8,
    add_value_zero: i8,
    add_value_value: i8,
    add_max: i8,
    add_min: i8,
}

impl ResultI8 {
    fn test() -> Self {
        Self {
            add_zero_zero: 0 as i8 + 0 as i8,
            add_zero_value: 0 as i8 + 13 as i8,
            add_value_zero: 13 as i8 + 0 as i8,
            add_value_value: 13 as i8 + 8 as i8,
            add_max: 76 as i8 + 41 as i8,
            add_min: -128 + 0 as i8,
        }
    }
}

struct ResultU64 {
    add_zero_zero: u64,
    add_zero_value: u64,
    add_value_zero: u64,
    add_value_value: u64,
    add_max: u64,
}

impl ResultU64 {
    fn test() -> Self {
        Self {
            add_zero_zero: 0 as u64 + 0 as u64,
            add_zero_value: 0 as u64 + 34 as u64,
            add_value_zero: 34 as u64 + 0 as u64,
            add_value_value: 34 as u64 + 21 as u64,
            add_max: 0x0FFF_FFFF_FFFF_FFFF as u64 + 0xF000_0000_0000_0000 as u64,
        }
    }
}

struct ResultI64 {
    add_zero_zero: i64,
    add_zero_value: i64,
    add_value_zero: i64,
    add_value_value: i64,
    add_max: i64,
    add_min: i64,
}

impl ResultI64 {
    fn test() -> Self {
        Self {
            add_zero_zero: 0 as i64 + 0 as i64,
            add_zero_value: 0 as i64 + 89 as i64,
            add_value_zero: 89 as i64 + 0 as i64,
            add_value_value: 89 as i64 + 55 as i64,
            add_max: 0x0FFF_FFFF_FFFF_FFFF as i64 + 0x7000_0000_0000_0000 as i64,
            add_min: -0x8000_0000_0000_0000 + 0 as i64,
        }
    }
}

struct ResultU248 {
    add_zero_zero: u248,
    add_zero_value: u248,
    add_value_zero: u248,
    add_value_value: u248,
    add_max: u248,
}

impl ResultU248 {
    fn test() -> Self {
        Self {
            add_zero_zero: 0 as u248 + 0 as u248,
            add_zero_value: 0 as u248 + 144 as u248,
            add_value_zero: 144 as u248 + 0 as u248,
            add_value_value: 144 as u248 + 233 as u248,
            add_max: 0x0F_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF as u248 +
                0xF0_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000 as u248,
        }
    }
}

struct ResultI248 {
    add_zero_zero: i248,
    add_zero_value: i248,
    add_value_zero: i248,
    add_value_value: i248,
    add_max: i248,
    add_min: i248,
}

impl ResultI248 {
    fn test() -> Self {
        Self {
            add_zero_zero: 0 as i248 + 0 as i248,
            add_zero_value: 0 as i248 + 377 as i248,
            add_value_zero: 377 as i248 + 0 as i248,
            add_value_value: 377 as i248 + 610 as i248,
            add_max: 0x0F_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF as i248
                + 0x70_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000 as i248,
            add_min: -0x80_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000 + 0 as i248,
        }
    }
}

struct ResultField {
    add_zero_zero: field,
    add_zero_value: field,
    add_value_zero: field,
    add_value_value: field,
    add_max: field,
}

impl ResultField {
    fn test() -> Self {
        Self {
            add_zero_zero: 0 as field + 0 as field,
            add_zero_value: 0 as field + 610 as field,
            add_value_zero: 610 as field + 0 as field,
            add_value_value: 610 as field + 987 as field,
            add_max: 21888242871839275222246405745257275088548364400416034343698204186575808495616 as field + 0 as field,
        }
    }
}

struct ResultMix {
    add_const_const: u8,
    add_const_value: u8,
    add_value_const: u8,
    add_value_value: u8,
}

impl ResultMix {
    fn test() -> Self {
        let value = 42;
        Self {
            add_const_const: 42 + 42,
            add_const_value: 42 + value,
            add_value_const: value + 42,
            add_value_value: value + value,
        }
    }
}

struct Result {
    result_u8: ResultU8,
    result_i8: ResultI8,
    result_u64: ResultU64,
    result_i64: ResultI64,
    result_u248: ResultU248,
    result_i248: ResultI248,
    result_field: ResultField,
    result_mix: ResultMix,
}

impl Result {
    fn test() -> Self {
        Self {
            result_u8: ResultU8::test(),
            result_i8: ResultI8::test(),
            result_u64: ResultU64::test(),
            result_i64: ResultI64::test(),
            result_u248: ResultU248::test(),
            result_i248: ResultI248::test(),
            result_field: ResultField::test(),
            result_mix: ResultMix::test(),
        }
    }
}
