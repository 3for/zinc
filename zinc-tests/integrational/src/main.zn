//!
//! The 'integrational' main module.
//!

mod addition;
mod subtraction;
mod multiplication;
mod division;
mod remainder;
mod equals;
mod not_equals;
mod greater_equals;
mod greater;
mod lesser_equals;
mod lesser;
mod hash;

struct Result {
    addition: addition::Result,
    subtraction: subtraction::Result,
    multiplication: multiplication::Result,
    division: division::Result,
    remainder: remainder::Result,
    equals: equals::Result,
    not_equals: not_equals::Result,
    greater_equals: greater_equals::Result,
    greater: greater::Result,
    lesser_equals: lesser_equals::Result,
    lesser: lesser::Result,
    hash: hash::Result,
}

fn main() -> Result {
    Result {
        addition: addition::Result::test(),
        subtraction: subtraction::Result::test(),
        multiplication: multiplication::Result::test(),
        division: division::Result::test(),
        remainder: remainder::Result::test(),
        equals: equals::Result::test(),
        not_equals: not_equals::Result::test(),
        greater_equals: greater_equals::Result::test(),
        greater: greater::Result::test(),
        lesser_equals: lesser_equals::Result::test(),
        lesser: lesser::Result::test(),
        hash: hash::Result::test(),
    }
}
