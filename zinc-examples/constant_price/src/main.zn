//!
//! The 'constant_price' contract entry.
//!

enum Token {
    X = 1,
    Y = 2,
}

type Balance = u248;

contract ConstantPrice {
    balance_x: Balance;
    balance_y: Balance;

    pub fn new(
        _balance_x: Balance,
        _balance_y: Balance,
    ) -> Self {
        Self {
            balance_x: _balance_x,
            balance_y: _balance_y,
        }
    }

    pub fn exchange(
        mut self,
        token: Token,
        amount: Balance,
    ) {
        match token {
            Token::X => {
                assert!(self.balance_y >= amount, "Not enough Y tokens to withdraw");
                self.balance_x += amount;
                self.balance_y -= amount;
            },
            Token::Y => {
                assert!(self.balance_x >= amount, "Not enough X tokens to withdraw");
                self.balance_y += amount;
                self.balance_x -= amount;
            },
        };
    }
}
